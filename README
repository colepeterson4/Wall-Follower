This is my Wall Follower PA code. It largely follows the strategy laid out in the article by Ana Rafael and Cassio Santos which was shared with the class previously. I use Lidar data from /scan and then clean it up with scan_values_handler. This scan data is then split up into seven zones. We take the shortest valid data point from each of these regions, and compare it against our threshold value to determine if there is some obstacle within each zone. We determine our state based on which zones are occupied. For example, if there is something in front of the bot, as well as to the left, then the robot will turn right. If there is just an obstruction to the right of the robot, it will try to maintain a 0.5 meter distance from that object while moving forwards. This distance is maintained using a PID algorithm that takes into account both distance from the wall, and the angle of the bot in relation to the wall. Because of this PID algorithm the robot smoothly approaches the wall and maintains its desired distance of 0.5 meters.
